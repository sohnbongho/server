# In this file you can override any option defined in the reference files.
# Copy in parts of the reference files and modify as you please.

akka
{
    # here we are configuring log levels
    log-config-on-start = off

    # Log level used by the configured loggers (see "loggers") as soon
    # as they have been started; before that, see "stdout-loglevel"
    # Options: OFF, ERROR, WARNING, INFO, DEBUG
    loglevel = "INFO"
    
    # Log level for the very basic logger activated during ActorSystem startup.
    # This logger prints the log messages to stdout (System.out).
    # Options: OFF, ERROR, WARNING, INFO, DEBUG
    stdout-loglevel = "INFO"        
    log-dead-letters = off
    
    debug {
        receive = off
        autoreceive = off
        lifecycle = off
        event-stream = off
        unhandled = on
    }

    io {
        tcp {
            # trace-logging = on
            outgoing-socket-force-ipv4 = true # akka에 Tcp는 기본적으로 ipv6를 사용함으로 ipv4를 사용하기 위해서는 반드시 설정해야 함
        }
      }

    actor
    {      
        roles = []

	    ################ 디스패처(스레드 풀) 설정 ##############
        ################ db commit을 위한 디스패처 설정
        # db 을 위한 액터들이 사용하는 디스패처
        database-dispatcher {
            type = ForkJoinDispatcher
            throughput = 10
            dedicated-thread-pool {
                thread-count = 4
                threadtype = background
            }
        }
        
        ################## 게임 내 각 role 별 디스패처 설정
        player-dispatcher {
            type = ForkJoinDispatcher
            throughput = 10
            # 한 액터가 너무 많은 cpu시간을 점유하지 못하도록 제한
            throughput-deadline-time = 10ms
            dedicated-thread-pool {
                thread-count = 10
                threadtype = background
            }
        }
        
        ############# 각 액터들의 라우터 설정 및 디스패처 지정 ##############
        deployment {
            # db commit 관련 액터들은 아래에서 별도 지정한 액터들 외에는 database-dispatcher를 사용            
            "/dbcordiator" {
                dispatcher = akka.actor.database-dispatcher
            }            
            "/dbcordiator/**" {
                dispatcher = akka.actor.database-dispatcher                
            }
            "/rediscordiator" {
                dispatcher = akka.actor.database-dispatcher
            }            
            "/rediscordiator/**" {
                dispatcher = akka.actor.database-dispatcher                
            }

            # 게임서버 플레이어들은 player-dispatcher 사용
            "/world/usercordiator/**" {
                dispatcher = akka.actor.player-dispatcher
            }
        }
      
    }
    remote {
        batch-accept-limit=100
        log-remote-lifecycle-events = DEBUG
        dot-netty.tcp {
          enforce-ip-family = true # ipv4를 사용하도록 강제 설정
        }
        roles = []
    }
  # remote message 를 받은 후 처리되기(OnReceive() 호출)까지 대기 가능한 최대 시간 설정
    io.tcp {
        register-timeout = 7200s
    }
    
    #remote
    #{
    #  dot-netty.tcp
    #  {
    #    port            = 9999
    #    hostname        = 0.0.0.0
    #    public-hostname = localhost
    #    batching
    #    {
    #      enabled = true	
    #       max-pending-writes = 30
	#        max-pending-bytes = 16k
    #      flush-interval = 40ms
    #    }
    #  }
    #}
}